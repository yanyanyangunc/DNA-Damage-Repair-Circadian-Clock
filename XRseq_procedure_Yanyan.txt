XR-seq (longleaf) human genome as example

1 fastqc
module load fastqc
sbatch -t 1-00:00:00 --mem=60000 -o a.out --wrap="fastqc a.fastq.gz"

2, trimed extra adaptor
module load bbmap
sbatch -t 1-00:00:00 --mem=80000 -o a.out --wrap="bbduk.sh in=a.fastq.gz out=a_trimed.fastq ktrim=r k=21 hdist=2 minlen=1 mink=15 ref=/proj/sancarlb/users/yanyanyang/seq/illumina_small_RNA_adaptor.fa"

Or using cutadapt, I suggest use cutadapt, and adjust the -m and -M according to your oligo's length
sbatch -t 1-23:00 --mem 80000 --wrap="module load cutadapt; cutadapt -a TGGAATTCTCGGGTGCCAAGGAACTCCAGTNNNNNNACGATCTCGTATGCCGTCTTCTGCTTG --discard-untrimmed -m 10 -M 40 -o a.cu.fastq a.fastq.gz"

3, remove duplicate reads
module load fastx_toolkit/0.0.14
sbatch -t 1-00:00:00 --mem=80000 -o a.out --wrap="fastx_collapser -v -i a.cu.fastq -o a.fasta -Q33"

4, length distribution to analysis the oligo length distribution
python Length_Dis_batch.py

5, remove 50mer if use bbmap to remove extra adaptor. If you use cutadapt, you don't need this step
python seperate_50bp_LL.py

6, nucleotide distribution for 26mer
python Nucleotide_Dis_Batch.py

7, Bowtie2 mapping data or Bowtie
module load bowtie2
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="bowtie2 -x /proj/seq/data/hg38_UCSC/Sequence/Bowtie2Index/genome -f a.fasta -S a.sam"

8, sam to sorted bam
module load samtools
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="samtools sort -o a.bam a.sam"

9, align to genome reads number
module load samtools
samtools view -F 0x04 -c a.sam 15587403

10, generate chromatin size file
module load ucsctools/320
fetchChromSizes hg38 > hg38.chrom.sizes or download your species chrom sizes from ucsc genome browser

11, convert bam file into bedgraph file and normalize all reads into 10 million through scale
a.sam scale=10000000/15587403=0.641543

module load bedtools
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="bedtools genomecov -ibam a.bam -g hg38.chrom.sizes -bg -strand + -scale 0.641543 > a_plus.bedgraph"
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="bedtools genomecov -ibam a.bam -g hg38.chrom.sizes -bg -strand - -scale 0.641543 > a_minus.bedgraph"

12, sorted bedgraph
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="sort -k1,1 -k2,2n a_plus.bedgraph > a_plus_sorted.bedgraph"
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="sort -k1,1 -k2,2n a_minus.bedgraph > a_minus_sorted.bedgraph"


13 convert bedgraph into bigwig
module load ucsctools/320
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="bedGraphToBigWig a_plus_sorted.bedgraph hg38.chrom.sizes a_plus.bigWig"
sbatch -t 10-00:00:00 --mem=80000 -o a.out --wrap="bedGraphToBigWig a_minus_sorted.bedgraph hg38.chrom.sizes a_minus.bigWig"

14, get hits reads number
bedtools intersect -c -a genelist.bed -b a.bam -wa -S -F 0.5 > a_TS.txt
bedtools intersect -c -a genelist.bed -b a.bam -wa -s -F 0.5 > a_NTS.txt



